name: CI-Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ci_${{ github.ref }}
  cancel-in-progress: true

env:
  javaVersion: "17"
  javaDistribution: "liberica"

jobs:
  ci-spring-boot:
    runs-on: ubuntu-latest
    needs:
      - advanced_end-to-end
      - advanced_scoping
      - async
      - basics
      - caching
      - data-jdbc
      - data-jpa
      - data-mongodb
      - data-redis
      - graphql
      - http-clients
      - jdbc
      - messaging-jms-activemq
      - messaging-jms-artemis
      - messaging-kafka
      - messaging-rabbitmq
      - micrometer
      - modulith
      - resilience4j
      - scheduling
      - security
      - webflux
      - webmvc
    steps:
      - run: echo "CI-Build completed!"

  advanced_end-to-end:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:advanced:end-to-end:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_advanced_end-to-end
          path: "**/build/reports/tests"
  advanced_scoping:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:advanced:scoping:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_advanced_scoping
          path: "**/build/reports/tests"
  async:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:async:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_async
          path: "**/build/reports/tests"
  basics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:basics:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_basics
          path: "**/build/reports/tests"
  caching:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:caching:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_caching
          path: "**/build/reports/tests"
  data-jdbc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:data-jdbc:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_data-jdbc
          path: "**/build/reports/tests"
  data-jpa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:data-jpa:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_data-jpa
          path: "**/build/reports/tests"
  data-mongodb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:data-mongodb:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_data-mongodb
          path: "**/build/reports/tests"
  data-redis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:data-redis:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_data-redis
          path: "**/build/reports/tests"
  graphql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:graphql:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_graphql
          path: "**/build/reports/tests"
  http-clients:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:http-clients:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_http-clients
          path: "**/build/reports/tests"
  jdbc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:jdbc:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_jdbc
          path: "**/build/reports/tests"
  messaging-jms-activemq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:messaging-jms-activemq:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_messaging-jms-activemq
          path: "**/build/reports/tests"
  messaging-jms-artemis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:messaging-jms-artemis:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_messaging-jms-artemis
          path: "**/build/reports/tests"
  messaging-kafka:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:messaging-kafka:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_messaging-kafka
          path: "**/build/reports/tests"
  messaging-rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:messaging-rabbitmq:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_messaging-rabbitmq
          path: "**/build/reports/tests"
  micrometer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:micrometer:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_micrometer
          path: "**/build/reports/tests"
  modulith:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:modulith:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_modulith
          path: "**/build/reports/tests"
  resilience4j:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:resilience4j:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_resilience4j
          path: "**/build/reports/tests"
  scheduling:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:scheduling:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_scheduling
          path: "**/build/reports/tests"
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:security:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_security
          path: "**/build/reports/tests"
  webmvc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:webmvc:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_webmvc
          path: "**/build/reports/tests"
  webflux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.javaVersion }}
          distribution: ${{ env.javaDistribution }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      - run: chmod +x gradlew
      - run: ./gradlew :examples:webflux:build
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results_webflux
          path: "**/build/reports/tests"
